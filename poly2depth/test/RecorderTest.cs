using System.IO;

namespace test
{
    /// <summary>
    /// Reads in a stream generated by Recorder and saves the first depth frame as
    /// a .pgm file to verify that the recording function works correctly.
    /// </summary>
    class RecorderTest
    {
        public static void Depth2PGM(string src, string dst)
        {
            // Read .depth
            FileStream fs_src = File.Open(src, FileMode.Open);
            BinaryReader br = new BinaryReader(fs_src);

            byte[] bytes = new byte[640 * 480 * 4];
            br.BaseStream.Seek(99, SeekOrigin.Begin);   // skip to first depth frame
            br.Read(bytes, 0, 640 * 480 * 4);

            br.Close();
            fs_src.Close();

            // Write .pgm
            FileStream fs_dst = File.Open(dst, FileMode.Create);
            BinaryWriter bw = new BinaryWriter(fs_dst);

            bw.Write("P5 640 480 65535\n".ToCharArray());
            unsafe
            {
                fixed (byte* pbytes = bytes)
                {
                    for (int i = 0; i < 640 * 480 * 4; i += 4)
                    {
                        float depth = *((float*)(pbytes + i));
                        short sdepth = (short)(depth * 1000.0f);

                        bw.Write(sdepth);
                    }
                }
            }
            bw.Close();
            fs_dst.Close();
        }
    }
}
